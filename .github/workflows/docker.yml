# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Docker Image

on:
  push:
    branches: [main, master]
concurrency:
  group: ${{ github.workflow }}-${{ github.actor }}
  cancel-in-progress: false

jobs:
  deploy_staging:
    runs-on: ubuntu-latest
    #    runs-on: [self-hosted, linux, x64]

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get FIREBASE_JS from secrets and write to firebase-messaging-sw.js
        run: |
          echo $FIREBASE_JS > src/firebase-messaging-sw.js
        env:
          FIREBASE_JS: ${{ secrets.FIREBASE_JS }}
      - run: chmod +x build.sh
      - run: ./build.sh staging
      - name: Build docker
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest-staging
            ghcr.io/${{ github.repository }}:0.0.${{ github.run_number}}-staging
  deploy_production:
    runs-on: ubuntu-latest
    #    runs-on: [self-hosted, linux, x64]

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: chmod +x build.sh
      - run: ./build.sh production
      - name: Build docker
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest-production
            ghcr.io/${{ github.repository }}:0.0.${{ github.run_number }}-production
